// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.1'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    apply from: rootDir.path + "/deps.gradle"
    apply from: rootDir.path + "/utils.gradle"
    repositories {
        addRepos(repositories)
    }
}

rootProject.buildDir = rootDir.parent + "/" + project.name + ".build"

subprojects {
    buildDir = rootProject.buildDir.path + "/" + project.name

    String pluginId = "app" == project.name ? "com.android.application" : "com.android.library"
    // application，library 的通用处理
    pluginManager.withPlugin(pluginId) {
        // 在 module build.gradle or project.afterEvaluate 可以被覆写
        apply from: rootDir.path + "/config.gradle"
        android {
            compileSdkVersion android_config.compileSdkVersion
            buildToolsVersion android_config.buildToolsVersion
            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }
            defaultConfig {
                minSdkVersion android_config.minSdkVersion
                targetSdkVersion android_config.targetSdkVersion
                testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            }
        }
        dependencies {
            // AndroidX
            implementation "androidx.appcompat:appcompat:1.2.0"
            // Test tools, 给所有 module 加上 test dependency
            testImplementation 'junit:junit:4.12'
            androidTestImplementation 'androidx.test:runner:1.3.0'
            androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
            // 可能使用 lombok
            compileOnly deps.lombok
            annotationProcessor deps.lombok
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
