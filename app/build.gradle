apply plugin: 'com.android.application'

android {

    defaultConfig {
        applicationId config.applicationId
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "mode"
    productFlavors {
        dev {
            dimension "mode"
            applicationIdSuffix ".dev"
            manifestPlaceholders = [PROJECT_NAME: "@string/app_name_dev",]
            buildConfigField 'String', 'API_URL', '"https://dev.android.com"'
            buildConfigField 'String', 'APP_KEY', '"123456"'
        }
        prod {
            dimension "mode"
            applicationIdSuffix ".prod"
            manifestPlaceholders = [PROJECT_NAME: "@string/app_name",]
            buildConfigField 'String', 'API_URL', '"https://prod.android.com"'
            buildConfigField 'String', 'APP_KEY', '"123456"'
        }

    }


    android.applicationVariants.all { variant ->
        // Assigns a different version code for each output APK other than the universal APK.
        variant.outputs.each { output ->
            output.outputFileName = defaultConfig.applicationId + "_" + buildType.name + "_" +
                    new Date().format("yyyMMdd") + "_v" +
                    defaultConfig.versionName + ".apk"
        }
    }
}
dependencies {
    implementation deps.androidx.appcompat
    implementation deps.viewlayout.constraintlayout
    implementation deps.viewlayout.recyclerview
//    implementation deps.viewlayout.viewpager


    implementation deps.logger

    implementation deps.google.gson
    implementation deps.room.runtime
    implementation deps.webview.agentwebx

    implementation project(path: ':base')
    implementation project(path: ':zutils')
    implementation project(path: ':zui')
    implementation project(path: ':database')
    implementation project(':libannotation')
    annotationProcessor project(':libannotation')
    implementation project(path: ':http')
    implementation project(path: ':libjava')

}

