import java.util.regex.Matcher
import java.util.regex.Pattern

ext {
    android_config = [
            compileSdkVersion   : 29,
            buildToolsVersion   : '29.0.3',
            applicationId       : 'com.zhuj.android',
            minSdkVersion       : 26,
            targetSdkVersion    : 29,
            versionCode         : 1,
            versionName         : '1.0.0',
            multiDexEnabled     : true,
            manifestPlaceholders: [UMENG_CHANNEL_VALUE: '']
    ]

//        signConfigs = [
//        "storeFile"    : "abc",
//        "storePassword": "123456",
//        "keyAlias"     : "abc",
//        "keyPassword"  : "123456"
//        ]

    javaVersion = JavaVersion.VERSION_1_8

    version = [
            support                    : "28.0.0",
            lifecycle                  : "2.2.0",
            constraint_layout          : "1.1.3",
            room                       : "2.2.3",

            android_gradle_plugin      : "3.6.1",
            android_maven_gradle_plugin: "2.0",
            gradle_bintray_plugin      : "1.8.0",

            gson                       : "2.8.6",
            kotlin                     : "1.2.20",
            okhttp3                    : "3.14.0",
            retrofit                   : "2.3.0",
            eventbus                   : "3.2.0",
            glide                      : "4.11.0",
            agentweb                   : "4.1.3",

            timber                     : "4.5.1",
            rxjava2                    : "2.1.3",
            rx_android                 : "2.0.1",
            arch_core                  : "2.0.0",
            dagger                     : "2.16",

            junit                      : "4.12",
            espresso                   : "3.2.0",
            runner                     : "1.2.0",
            booster                    : "1.4.0",
            booster_all                : "1.1.1",

            okhttp_logging_interceptor : "3.9.0",
            mockwebserver              : "3.8.1",
            apache_commons             : "2.5",
            mockito                    : "2.7.19",
            mockito_all                : "1.10.19",
            dexmaker                   : "2.2.0",

            atsl_runner                : "1.0.1",
            atsl_rules                 : "1.0.1",
            hamcrest                   : "1.3",
            paging                     : "1.0.0-alpha5",
            butterknife                : "10.1.0",
            nineoldandroids            : "2.4.0",
            calligraphy                : "2.3.0",
            godeye                     : "1.7.4",
    ]

    gradle_plugin = [
            android_gradle_plugin = "com.android.tools.build:gradle:$version.android_gradle_plugin",
            android_maven_gradle_plugin = "com.github.dcendents:android-maven-gradle-plugin:$version.android_maven_gradle_plugin",
            gradle_bintray_plugin = "com.jfrog.bintray.gradle:gradle-bintray-plugin:$version.gradle_bintray_plugin",
            freeline_gradle_plugin = "com.antfortune.freeline:gradle:0.8.8"
    ]

    dependence = [
            material          : "com.google.android.material:material:1.1.0",
            design            : "com.android.support:design:$version.support",
            androidx          : [
                    appcompat       : "androidx.appcompat:appcompat:1.1.0",
                    annotations     : "androidx.annotation:annotation:1.1.0",
                    constraintlayout: "androidx.constraintlayout:constraintlayout:1.1.3",
                    recyclerview    : "androidx.recyclerview:recyclerview:1.1.0",
                    viewpager       : "androidx.viewpager:viewpager:1.0.0",
                    cardview        : "androidx.cardview:cardview:1.0.0",
                    multidex        : "androidx.multidex:multidex:2.0.0"
            ],
            support           : [
                    annotations : "com.android.support:support-annotations:$version.support",
                    app_compat  : "com.android.support:appcompat-v7:$version.support",
                    recyclerview: "com.android.support:recyclerview-v7:$version.support",
                    cardview    : "com.android.support:cardview-v7:$version.support",
                    v4          : "com.android.support:support-v4:$version.support",
                    core_utils  : "com.android.support:support-core-utils:$version.support"
            ],
            test              : [
                    espresso_core   : "androidx.test.espresso:espresso-core:$version.espresso",
                    espresso_contrib: "androidx.test.espresso:espresso-contrib:$version.espresso",
                    espresso_intents: "androidx.test.espresso:espresso-intents:$version.espresso",
                    atsl_runner     : "com.android.support.test:runner:$version.atsl_runner",
                    atsl_rules      : "com.android.support.test:rules:$version.atsl_runner"
            ],
            lifecycle         : [
                    runtime        : "androidx.lifecycle:lifecycle-runtime:$version.lifecycle",
                    viewmodel      : "androidx.lifecycle:lifecycle-viewmodel:$version.lifecycle",
                    livedata       : "androidx.lifecycle:lifecycle-livedata:$version.lifecycle",
                    lifecycle_java8: "androidx.lifecycle:lifecycle-common-java8:$version.lifecycle",
                    extensions     : "androidx.lifecycle:lifecycle-extensions:$version.lifecycle"
            ],
            kotlin            : [
                    stdlib: "org.jetbrains.kotlin:kotlin-stdlib-jre7:$version.kotlin",
                    test  : "org.jetbrains.kotlin:kotlin-test-junit:$version.kotlin",
                    plugin: "org.jetbrains.kotlin:kotlin-gradle-plugin:$version.kotlin",

            ],
            room              : [
                    runtime : "androidx.room:room-runtime:$version.room",
                    processor: "androidx.room:room-compiler:$version.room",
                    rxjava2 : "android.arch.persistence.room:rxjava2:$version.room",
                    testing : "android.arch.persistence.room:testing:$version.room",
            ],
            okhttp            : "com.squareup.okhttp3:okhttp:$version.okhttp3",
            gson              : "com.google.code.gson:gson:$version.gson",

            glide             : "com.github.bumptech.glide:glide:$version.glide",
            glideProcessor    : "com.github.bumptech.glide:compiler:$version.glide",

            eventbus          : "org.greenrobot:eventbus:$version.eventbus",
            logger            : "com.orhanobut:logger:2.2.0",
            agentweb          : "com.just.agentweb:agentweb:$version.agentweb",
            filechooser       : "com.just.agentweb:filechooser:$version.agentweb",
            downloader        : "com.download.library:Downloader:$version.agentweb",

            swiperefreshlayout: "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0",
            paging            : "android.arch.paging:runtime:$version.paging",
            dexmaker          : "com.linkedin.dexmaker:dexmaker-mockito:$version.dexmaker",
            timber            : "com.jakewharton.timber:timber:$version.timber",
            mock_web_server   : "com.squareup.okhttp3:mockwebserver:$version.mockwebserver",
            rxjava2           : "io.reactivex.rxjava2:rxjava:$version.rxjava2",
            rx_android        : "io.reactivex.rxjava2:rxandroid:$version.rx_android",
            hamcrest          : "org.hamcrest:hamcrest-all:$version.hamcrest",
    ]
}

def version = ext.version
def dependence = ext.dependence

def booster = [
        gradle_plugin               : "com.didiglobal.booster:booster-gradle-plugin:$version.booster",
        task_all                    : "com.didiglobal.booster:booster-task-all:$version.booster_all",
        transform_all               : "com.didiglobal.booster:booster-transform-all:$version.booster_all",
//采用 cwebp 对资源进行压缩
        task_compression_cwebp      : "com.didiglobal.booster:booster-task-compression-cwebp:$version.booster",
//采用 pngquant 对资源进行压缩
        task_compression_pngquant   : "com.didiglobal.booster:booster-task-compression-pngquant:$version.booster",
//ap_ 文件压缩
        task_processed_res          : "com.didiglobal.booster:booster-task-compression-processed-res:$version.booster",
//去冗余资源
        task_resource_deredundancy  : "com.didiglobal.booster:booster-task-resource-deredundancy:$version.booster",
//检查 SNAPSHOT 版本
        task_check_snapshot         : "com.didiglobal.booster:booster-task-check-snapshot:$version.booster",
//性能瓶颈检测
        transform_lint              : "com.didiglobal.booster:booster-transform-lint:$version.booster",
//多线程优化
        transform_thread            : "com.didiglobal.booster:booster-transform-thread:$version.booster",
//资源索引内联
        transform_r_inline          : "com.didiglobal.booster:booster-transform-r-inline:$version.booster",
//WebView 预加载
        transform_webview           : "com.didiglobal.booster:booster-transform-webview:$version.booster",
//SharedPreferences 优化
        transform_shared_preferences: "com.didiglobal.booster:booster-transform-shared-preferences:$version.booster",
//检查覆盖安装导致的 Resources 和 Assets 未加载的 Bug
        transform_res_check         : "com.didiglobal.booster:booster-transform-res-check:$version.booster",
//修复 Toast 在 Android 7.1 上的 Bug
        transform_toast             : "com.didiglobal.booster:booster-transform-toast:$version.booster",
//处理系统 Crash
        transform_activity_thread   : "com.didiglobal.booster:booster-transform-activity-thread:$version.booster",
]
dependence.booster = booster

def retrofit = [
        runtime: "com.squareup.retrofit2:retrofit:$version.retrofit",
        gson   : "com.squareup.retrofit2:converter-gson:$version.retrofit",
        mock   : "com.squareup.retrofit2:retrofit-mock:$version.retrofit",
]
dependence.retrofit = retrofit

def dagger = [
        runtime                 : "com.google.dagger:dagger:$version.dagger",
        android                 : "com.google.dagger:dagger-android:$version.dagger",
        android_support         : "com.google.dagger:dagger-android-support:$version.dagger",
        compiler                : "com.google.dagger:dagger-compiler:$version.dagger",
        android_support_compiler: "com.google.dagger:dagger-android-processor:$version.dagger",
]
dependence.dagger = dagger

def butterknife = [
        runtime : "com.jakewharton:butterknife:$version.butterknife",
        compiler: "com.jakewharton:butterknife-compiler:$version.butterknife"
]
dependence.butterknife = butterknife

def arouter = [
        api     : "com.alibaba:arouter-api:1.3.1",
        compiler: "com.alibaba:arouter-compiler:1.1.4"
]
dependence.arouter = arouter

def mockito = [
        core: "org.mockito:mockito-core:$version.mockito",
        all : "org.mockito:mockito-all:$version.mockito_all"
]
dependence.mockito = mockito

/**
 * @return 是否为release
 */
//def isRelease() {
//    Gradle gradle = getGradle()
//    String tskReqStr = gradle.getStartParameter().getTaskRequests().toString()
//
//    Pattern pattern
//    if (tskReqStr.contains("assemble")) {
//        println tskReqStr
//        pattern = Pattern.compile("assemble(\\w*)(Release|Debug)")
//    } else {
//        pattern = Pattern.compile("generate(\\w*)(Release|Debug)")
//    }
//    Matcher matcher = pattern.matcher(tskReqStr)
//
//    if (matcher.find()) {
//        String task = matcher.group(0).toLowerCase()
//        println("[BuildType] Current task: " + task)
//        return task.contains("release")
//    } else {
//        println "[BuildType] NO MATCH FOUND"
//        return true
//    }
//}
//
//ext.isRelease = this.&isRelease

//// 默认添加代码仓库路径
//static def addRepos(RepositoryHandler handler) {
//    handler.google()
//    handler.jcenter()
//    handler.mavenCentral()
//    //Add the JitPack repository
//    handler.maven { url "https://jitpack.io" }
//    handler.maven { url "https://dl.bintray.com/umsdk/release" }
//    //Add the aliyun repository
//    handler.maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
//    handler.maven { url "https://oss.sonatype.org/content/repositories/public" }
//    //Add the Local repository
//    handler.maven { url "LocalRepository" }
//}
//
//ext.addRepos = this.&addRepos

//
//// 自动添加XAOP和XRouter插件
//project.buildscript.configurations.each { configuration ->
//    if (configuration.name == "classpath") {
//        // XAOP插件
//        configuration.dependencies.add(getProject().dependencies.create("com.github.xuexiangjys.XAOP:xaop-plugin:1.0.5x"))
//        // XRouter插件
//        configuration.dependencies.add(getProject().dependencies.create("com.github.xuexiangjys.XRouter:xrouter-plugin:1.0.1"))
//    }
//}